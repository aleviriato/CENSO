CREATE OR REPLACE FORCE VIEW VW_BENEFIC_OUTRO_PAIS_ESTADO AS
SELECT   DISTINCT
           B.NUM_PRONTUARIO         AS PRONTUARIO,
           P.NOM_PESSOA_FISICA      AS NOME,
           P.NUM_CPF                AS CPF,
           P.DAT_NASC               AS DATA_NASCIMENTO,
           B.DAT_INI_BENEFICIO      AS DATA_CONCESSAO,
           RECENSEAMENTO.FNC_FORMATA_TELEFONE(P.NUM_TEL_FONE1) AS TELEFONE,
           TIPOLOG.NOM_TIPO         AS TIPO_LOGRADOURO,
           END.NOM_LOGRADOURO       AS LOGRADOURO,
           END.NUM_NUMERO           AS NUMERO,
           BAIRRO.NOM_BAIRRO        AS BAIRRO,
           MUNICIPIO.NOM_ABREVIADO  AS CIDADE,
           END.NUM_CEP              AS CEP,
           ESTADO.NAME              AS ESTADO,
           R.NOM_PESSOA_FISICA      AS NOME_REPRESENTANTE,
           R.NUM_CPF                AS CPF_REPRESENTANTE,
           RECENSEAMENTO.FNC_FORMATA_TELEFONE(R.NUM_TEL_FONE1) AS TEL_REPRESENTANTE,
           PAIS.NOM_PAIS            AS PAIS,
           END.PAIS_ID              AS PAIS_ID,
           ESTADO.ID                AS ESTADO_ID

    FROM RECENSEAMENTO.TB_PESSOA_FISICA P

        INNER JOIN RECENSEAMENTO.TB_BENEFICIARIO B
            ON ( P.COD_IDE_CLI =  B.COD_IDE_CLI )

        LEFT JOIN RECENSEAMENTO.TB_REPRESENTANTE_LEGAL R
            ON ( R.COD_IDE_CLI =  P.COD_IDE_CLI  )

        INNER JOIN RECENSEAMENTO.TB_END_PESSOA_FISICA END
            ON ( P.COD_IDE_CLI =  END.COD_IDE_CLI AND END.COD_TIPO_END = 601)


        LEFT JOIN RECENSEAMENTO.TB_END_TIPO_LOGRADOURO TIPOLOG
            ON ( TIPOLOG.ID =  END.COD_TIP_LOGRADOURO )

        LEFT JOIN RECENSEAMENTO.TB_END_BAIRRO BAIRRO
            ON ( END.COD_BAIRRO = BAIRRO.ID )

        LEFT JOIN RECENSEAMENTO.TB_END_LOCALIDADE MUNICIPIO
            ON ( END.COD_MUNICIPIO = MUNICIPIO.ID )

        LEFT JOIN RECENSEAMENTO.TB_DOMINIO_DETALHE ESTADO
            ON (    ESTADO.DOMAIN_ID = 3
                AND ESTADO.ID = END.COD_UF )

        LEFT JOIN RECENSEAMENTO.TB_END_PAIS PAIS
            ON ( PAIS.ID = END.PAIS_ID )
    WHERE nvl(P.FLG_EXCLUIDO,'N') <> 'S'

    ORDER BY TO_CHAR(P.DAT_NASC, 'MM/DD');

